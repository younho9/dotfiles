#!/usr/bin/env bash

mkdir "$HOME/repositories"
mkdir "$HOME/repositories/company"
mkdir "$HOME/repositories/company/organizations"
mkdir "$HOME/repositories/company/personal"
mkdir "$HOME/repositories/github"
mkdir "$HOME/repositories/github/organizations"
mkdir "$HOME/repositories/github/public"

export GITHUB_PUBLIC="$HOME/repositories/github/public"

git clone https://github.com/younho9/dotfiles.git ${GITHUB_PUBLIC}/dotfiles
git clone https://github.com/younho9/notes.younho9.com.git ${GITHUB_PUBLIC}/notes.younho9.com

mkdir "$HOME/.secrets"
ln -sf "$GITHUB_PUBLIC/dotfiles/.aliases" "$HOME/.aliases"
ln -sf "$GITHUB_PUBLIC/dotfiles/.exports" "$HOME/.exports"
ln -sf "$GITHUB_PUBLIC/dotfiles/.gitconfig" "$HOME/.gitconfig"
ln -sf "$GITHUB_PUBLIC/dotfiles/.gitconfig.company" "$HOME/.gitconfig.company"
ln -sf "$GITHUB_PUBLIC/dotfiles/.gitignore_global" "$HOME/.gitignore_global"
ln -sf "$GITHUB_PUBLIC/dotfiles/.gitmessage.txt" "$HOME/.gitmessage.txt"
ln -sf "$GITHUB_PUBLIC/dotfiles/.p10k.zsh" "$HOME/.p10k.zsh"
ln -sf "$GITHUB_PUBLIC/dotfiles/.zshrc" "$HOME/.zshrc"

# Install oh-my-zsh https://ohmyz.sh/#install
sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"

export ZSH_CUSTOM="$HOME/.oh-my-zsh/custom"

git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM}/themes/powerlevel10k
git clone https://github.com/TamCore/autoupdate-oh-my-zsh-plugins ${ZSH_CUSTOM}/plugins/autoupdate
git clone https://github.com/paulirish/git-open.git ${ZSH_CUSTOM}/plugins/git-open
git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM}/plugins/zsh-syntax-highlighting
git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM}/plugins/zsh-autosuggestions

# Install homebrew https://brew.sh
if [[ "$(arch)" == "arm64" ]]; then
	export PATH="/opt/homebrew/bin:/opt/homebrew/sbin:$PATH"
	/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
else
	export PATH="/usr/local/bin:/usr/local/sbin:$PATH"
	/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
fi

# Make sure weâ€™re using the latest Homebrew.
brew update

# Upgrade any already-installed formulae.
brew upgrade

# Install fonts.
brew tap homebrew/cask-fonts
brew install --cask font-fira-code
brew install --cask font-meslo-lg-nerd-font
brew install --cask font-d2coding

# Install tools.
brew install bat
brew install fasd
brew install fzf
brew install gh
brew install git
brew install jq
brew install nvm
brew install tree
brew install neofetch
brew install pyenv
brew install mas

# Install apps.
brew install --cask alfred
brew install --cask cleanmymac
brew install --cask discord
brew install --cask figma
brew install --cask firefox
brew install --cask google-chrome
brew install --cask google-drive
brew install --cask iterm2
brew install --cask karabiner-elements
brew install --cask keka
brew install --cask macs-fan-control
brew install --cask microsoft-edge
brew install --cask microsoft-remote-desktop
brew install --cask notion
brew install --cask obsidian
brew install --cask openinterminal
brew install --cask postman
brew install --cask slack
brew install --cask spotify
brew install --cask ticktick
brew install --cask typora
brew install --cask visual-studio-code
brew install --cask arc
brew install --cask raycast
brew install --cask cron
brew install --cask zoom

# Install apps from App Store.
mas install 869223134 # KaKaoTalk

# Remove outdated versions from the cellar.
brew cleanup

# Install node
echo "installing node (via nvm)"
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash

source "$HOME/.zshrc"
nvm install node

echo "node --version: $(node --version)"
echo "npm --version: $(npm --version)"

# Install python 2
pyenv install 2.7.18
pyenv global 2.7.18
export PATH="$(pyenv root)/shims:${PATH}"

# Install Rosseta 2
if [[ "$(arch)" == "arm64" ]]; then
	softwareupdate --install-rosetta
fi

# Set macOS defaults https://macos-defaults.com/
defaults write com.apple.dock "orientation" -string "left" && killall Dock
defaults write com.apple.dock "autohide" -bool "true" && killall Dock
defaults write com.apple.dock "tilesize" -int "36" && killall Dock
defaults write com.apple.finder "FXPreferredViewStyle" -string "clmv" && killall Finder
defaults write com.apple.finder "ShowPathbar" -bool "true" && killall Finder
